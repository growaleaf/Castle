policy_module(castle, 1.100.1)

########################################
#
# Declarations
#

type castle_t;
type castle_exec_t;
init_daemon_domain(castle_t, castle_exec_t)

permissive castle_t;

type castle_initrc_exec_t;
init_script_file(castle_initrc_exec_t)

type castle_conf_t;
files_type(castle_conf_t)

type castle_var_lib_t;
files_type(castle_var_lib_t)

type castle_var_run_t;
files_type(castle_var_run_t)

type castle_port_t;
corenet_port(castle_port_t)

########################################
#
# castle local policy
#
allow castle_t self:process { fork };

allow castle_t self:fifo_file rw_fifo_file_perms;
allow castle_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(castle_t, castle_conf_t, castle_conf_t)
manage_files_pattern(castle_t, castle_conf_t, castle_conf_t)

manage_dirs_pattern(castle_t, castle_var_lib_t, castle_var_lib_t)
manage_files_pattern(castle_t, castle_var_lib_t, castle_var_lib_t)
files_var_lib_filetrans(castle_t, castle_var_lib_t, { dir file })

manage_dirs_pattern(castle_t, castle_var_run_t, castle_var_run_t)
manage_files_pattern(castle_t, castle_var_run_t, castle_var_run_t)

sysnet_dns_name_resolve(castle_t)
corenet_all_recvfrom_unlabeled(castle_t)

allow castle_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(castle_t)
corenet_tcp_sendrecv_generic_node(castle_t)
corenet_tcp_sendrecv_all_ports(castle_t)
corenet_tcp_bind_generic_node(castle_t)

gen_require(`
    type castle_port_t;
')
allow castle_t castle_port_t:tcp_socket name_bind;

gen_require(`
    type castle_port_t;
')
allow castle_t castle_port_t:tcp_socket name_connect;

domain_use_interactive_fds(castle_t)

files_read_etc_files(castle_t)

miscfiles_read_localization(castle_t)

sysnet_dns_name_resolve(castle_t)

allow castle_t castle_exec_t:file execute_no_trans;
allow castle_t self:process setsched;
corecmd_exec_ls(castle_t)
corenet_tcp_connect_http_port(castle_t)
dev_read_urand(castle_t)
fs_getattr_xattr_fs(castle_t)
kernel_read_system_state(castle_t)
